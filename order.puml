@startuml
<style>
sequenceDiagram {
    FontName Fira Code
    partition {
        LineColor DarkRed
    }
}
</style>
actor "Браузер" as user
box "BackEnd"
    participant "tickets" as t
    participant "payments" as p
    database "PostgreSQL" as pg
    database "Kafka" as kafka
end box

== Получение списка доступных билетов ==

user -> t: Запрос доступных билетов
t -> pg: Запрос билетов который нет в множестве \nзарезервированный и нет в множестве купленных
pg --> t
t --> user

== Выбор билетов ==
user -> t: Выбирает билеты
t -> pg: Записывает билеты в множество зарезервированных билетов
pg --> t
t -> p: Создает инвойс на оплату
t --> user: Делается редирект на оплату

== Оплата билетов ==
user -> p: Оплата билетов
p -> p: Производит действия по оплате
p -> pg: Фиксирует оплату или ошибку
p -> kafka: Событие оплаты или ошибки оплаты

== Фиксирование покупки билетов ==
t <- kafka: Событие по билету
t -> pg: Если ошибка снимаем резервирование билета,\nесли нет ошибки убираем резерв и\nодновременно добавляем билет в\nмножество купленных
@enduml
